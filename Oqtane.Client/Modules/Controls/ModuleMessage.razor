@namespace Oqtane.Modules.Controls
@inherits ModuleControlBase
@inject NavigationManager NavigationManager

@if (!string.IsNullOrEmpty(Message))
{
    <div class="@_classname alert-dismissible fade show mb-3" role="alert">
        @((MarkupString)Message)
        @if (PageState != null)
        {
            @if (Type == MessageType.Error && UserSecurity.IsAuthorized(PageState.User, RoleNames.Host))
            {
                <NavLink class="ms-2" href="@NavigateUrl("admin/log")">View Details</NavLink>
            }
            <button type="button" class="btn-close" data-dismiss="alert" aria-label="close" @onclick="CloseMessage"></button>
        }
    </div>
}

@code {
    private string _message = string.Empty;
    private string _classname = string.Empty;
    private string _formname = "ModuleMessageForm";

    [Parameter]
    public string Message { get; set; }

    [Parameter]
    public MessageType Type { get; set; }

    [Parameter]
    public RenderModeBoundary Parent { get; set; }

    protected override void OnInitialized()
    {
        if (ModuleState != null)
        {
            _formname += ModuleState.PageModuleId.ToString();
        }
    }

    protected override void OnParametersSet()
    {
        _message = Message;
        if (!string.IsNullOrEmpty(_message))
        {
            _classname = GetMessageType(Type);
        }
    }

    private string GetMessageType(MessageType type)
    {
        string classname = string.Empty;
        switch (type)
        {
            case MessageType.Success:
                classname = "alert alert-success";
                break;
            case MessageType.Info:
                classname = "alert alert-info";
                break;
            case MessageType.Warning:
                classname = "alert alert-warning";
                break;
            case MessageType.Error:
                classname = "alert alert-danger";
                break;
        }

        return classname;
    }
    private void CloseMessage(MouseEventArgs e)
    {
        if(Parent != null)
        {
            Parent.DismissMessage();
        }
        else
        {
            NavigationManager.NavigateTo(NavigationManager.Uri);
        }
    }
}
