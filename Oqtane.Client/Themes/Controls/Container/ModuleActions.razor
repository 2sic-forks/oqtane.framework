@namespace Oqtane.Themes.Controls
@inherits ContainerBase
@attribute [OqtaneIgnore]

@if (PageState.EditMode && UserSecurity.IsAuthorized(PageState.User, PermissionNames.Edit, PageState.Page.PermissionList) && PageState.Action == Constants.DefaultAction)
{
    @if (PageState.RenderMode == RenderModes.Interactive)
    {
        <ModuleActionsInteractive PageState="@_moduleActionsPageState" ModuleState="@ModuleState" />
    }
    else
    {
        <ModuleActionsInteractive PageState="@_moduleActionsPageState" ModuleState="@ModuleState" @rendermode="@InteractiveRenderMode.GetInteractiveRenderMode(PageState.Site.Runtime, false)" />
    }
}

@code {
    private ModuleActionsPageState _moduleActionsPageState;

    protected override void OnParametersSet()
    {
        // trim PageState to mitigate page bloat caused by Blazor serializing/encrypting state when crossing render mode boundaries
        _moduleActionsPageState = new ModuleActionsPageState
        {
            Alias = PageState.Alias,
            Page = PageState.Page,
            User = PageState.User,
            EditMode = PageState.EditMode
        };
    }
}
